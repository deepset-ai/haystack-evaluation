[project]
name = "haystack-evaluation"
version = "0.0.1"

[tool.hatch.envs.default]
dependencies = [
  "pre-commit",
  "ruff",
  "haystack-ai",
  "haystack_experimental"
]

[tool.hatch.envs.default.scripts]
check = "ruff check {args}"
fix = "ruff check --fix"
format = "ruff format {args}"
format-check = "ruff format --check {args}"

[tool.hatch.envs.test]
extra-dependencies = [
  # Looking for missing imports
  "isort",
  "pyproject-parser",

  # Test
  "pytest",
  "pytest-bdd",
  "pytest-cov",
  "pytest-custom_exit_code", # used in the CI
  "pytest-asyncio",
  "responses",
  "tox",
  "coverage",
  "python-multipart",
  "psutil",
  "mypy",
  "pylint",
  "ipython",
]

[tool.hatch.envs.test.scripts]
types = "mypy --install-types --non-interactive --cache-dir=.mypy_cache/ {args:evaluations}"
lint = "pylint -ry -j 0 {args:evaluations}"

[tool.hatch.metadata]
allow-direct-references = true

[tool.codespell]
ignore-words-list = "ans,astroid,nd,ned,nin,ue,rouge,ist"
quiet-level = 3

[tool.pylint.'MESSAGES CONTROL']
max-line-length = 120
disable = [

  # To keep
  "fixme",
  "c-extension-no-member",

  # To review:
  "missing-docstring",
  "unused-argument",
  "no-member",
  "line-too-long",
  "protected-access",
  "too-few-public-methods",
  "raise-missing-from",
  "invalid-name",
  "duplicate-code",
  "arguments-differ",
  "consider-using-f-string",
  "no-else-return",
  "attribute-defined-outside-init",
  "super-with-arguments",
  "redefined-builtin",
  "abstract-method",
  "unspecified-encoding",
  "unidiomatic-typecheck",
  "no-name-in-module",
  "consider-using-with",
  "redefined-outer-name",
  "arguments-renamed",
  "unnecessary-pass",
  "broad-except",
  "unnecessary-comprehension",
  "subprocess-run-check",
  "singleton-comparison",
  "consider-iterating-dictionary",
  "undefined-loop-variable",
  "consider-using-in",
  "bare-except",
  "unexpected-keyword-arg",
  "simplifiable-if-expression",
  "use-list-literal",
  "broad-exception-raised",

  # To review later
  "cyclic-import",
  "import-outside-toplevel",
  "deprecated-method",
]
[tool.pylint.'DESIGN']
max-args = 38           # Default is 5
max-attributes = 28     # Default is 7
max-branches = 34       # Default is 12
max-locals = 45         # Default is 15
max-module-lines = 2468 # Default is 1000
max-nested-blocks = 9   # Default is 5
max-statements = 206    # Default is 50
[tool.pylint.'SIMILARITIES']
min-similarity-lines = 6

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--strict-markers"
log_cli = true

[tool.mypy]
warn_return_any = false
warn_unused_configs = true
ignore_missing_imports = true

[tool.ruff]
line-length = 120
target-version = "py38"
exclude = [".github"]

[tool.ruff.format]
skip-magic-trailing-comma = true

[tool.ruff.lint]
isort.split-on-trailing-comma = false
exclude = ["test/**", "e2e/**"]
select = [
  "ASYNC", # flake8-async
  "C4",    # flake8-comprehensions
  "C90",   # McCabe cyclomatic complexity
  "E501",  # Long lines
  "EXE",   # flake8-executable
  "F",     # Pyflakes
  "INT",   # flake8-gettext
  "PERF",  # Perflint
  "PL",    # Pylint
  "Q",     # flake8-quotes
  "SIM",   # flake8-simplify
  "SLOT",  # flake8-slots
  "T10",   # flake8-debugger
  "W",     # pycodestyle
  "YTT",   # flake8-2020
  "I",     # isort

  # built-in shadowing
  "A001", # builtin-variable-shadowing
  "A002", # builtin-argument-shadowing
  "A003", # builtin-attribute-shadowing

  # docstring rules
  # "D102", # Missing docstring in public method
  # "D103", # Missing docstring in public function
  "D209", # Closing triple quotes go to new line
  "D205", # 1 blank line required between summary line and description
  "D213", # summary lines must be positioned on the second physical line of the docstring
  "D417", # undocumented-parameter
  "D419", # undocumented-returns
]

ignore = [
  "F401",    # unused-import
  "PERF203", # `try`-`except` within a loop incurs performance overhead
  "PERF401", # Use a list comprehension to create a transformed list
  "PLR1714", # repeated-equality-comparison
  "PLR5501", # collapsible-else-if
  "PLW0603", # global-statement
  "PLW1510", # subprocess-run-without-check
  "PLW2901", # redefined-loop-name
  "SIM108",  # if-else-block-instead-of-if-exp
  "SIM115",  # open-file-with-context-handler
  "SIM118",  # in-dict-keys
]

[tool.ruff.lint.mccabe]
max-complexity = 28

[tool.ruff.lint.per-file-ignores]
"examples/basic_qa_pipeline.py" = ["C416"]
"haystack/preview/testing/document_store.py" = ["C416", "F821"]
"haystack/telemetry.py" = ["F821"]

[tool.ruff.lint.pylint]
allow-magic-value-types = ["float", "int", "str"]
max-args = 14                                     # Default is 5
max-branches = 21                                 # Default is 12
max-public-methods = 20                           # Default is 20
max-returns = 7                                   # Default is 6
max-statements = 60                               # Default is 50
